using Dagger.Introspection;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using static Microsoft.CodeAnalysis.CSharp.SyntaxFactory;
using static Dagger.SyntaxTree;
namespace Dagger;

static class API
{
	public static CompilationUnitSyntax Generate(Schema schema)
		=> CompilationUnit()
			.AddComment("This file was auto-generated by Dagger\n// Do not make direct changes to this file.")
			.AddUsings
			(
				"Dagger",
				"System",
				"System.Collections.Generic",
				"System.Collections.Immutable",
				"System.Linq",
				"System.Text.Json",
				"System.Text.Json.Serialization",
				"System.Threading.Tasks"
			)
			.AddUsingStatic("Dagger", "APIUtils")
			.AddMembers
			(
				NamespaceDeclaration("Dagger")
					.AddMembers
					(
						Structures.Generate(schema)
							.Concat(Classes.Generate(schema))
							.Append
							(
								ClassDeclaration("Alias")
									.AddModifiers(SyntaxKind.PublicKeyword, SyntaxKind.StaticKeyword)
									.AddDocumentationComment(XmlSummaryElement(XmlText("Static-use this class (using static Dagger.Alias) to use \"DAG\" as a shortcut for \"Query.FromDefaultSession\".")))
									.AddMembers
									(
										PropertyDeclaration("Query", "DAG")
											.AddModifiers(SyntaxKind.PublicKeyword, SyntaxKind.StaticKeyword)
											.WithExpressionBody(MemberAccessExpression("Query", "FromDefaultSession"))
									)
							)
					)
			);
}
